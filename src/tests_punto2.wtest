import mundo.*
import jugadores.*
import artefactos.*
import refuerzos.*
import hechizos.*
import comerciante.*

describe "Tests sobre la habilidad de lucha de ronaldo" {

	const espadaDelDestino
	const rolando
	const unaMascara
	const otraMascara
	const espadaVieja
	const espadaNueva
	const espadaComun
	const mascaraOscura
	const mascaraClara
	const armaduraConCotaDeMalla
	const cotaDeMalla
	const armaduraConHechizoPar
	const armaduraConHechizoImpar
	const armaduraSinRefuerzo
	const merlin
	const ursula
	const hechizoComercial
	const hechizoLogo
	const mockHnos

	fixture {
		hechizoComercial = new HechizoComercial(nombre = "el hechizo comercial", multiplo = 2, porcentaje = 0.2)
		hechizoLogo = new Logo(nombre = "espectro maléfico", multiplo = 3)
		mundo.fuerzaOscura(5)
		collarDivino.perlas(5)
		collarDivino.peso(0)
		//collarDivino.diasDeCompra(0)
		rolando = new Jugador()
		rolando.valorBaseLucha(1)
		espadaDelDestino = new Arma()
		unaMascara = new MascaraOscura(diasDeCompra = 0, peso = 3, indiceDeOscuridad = 1)
		rolando.artefactos([ espadaDelDestino, collarDivino, unaMascara ])
		otraMascara = new MascaraOscura(peso = 2, indiceDeOscuridad = 0)
		mascaraOscura = new MascaraOscura( peso = 3, indiceDeOscuridad = 1)
		mascaraClara = new MascaraOscura( peso = 2, indiceDeOscuridad = 0)
		espadaVieja = new Arma(diasDeCompra = new Date(7,5,2006), peso = 7)
		espadaNueva = new Arma(peso = 4)
		espadaComun = new Arma(diasDeCompra = new Date().minusDays(50), peso = 5)
		cotaDeMalla = new CotaDeMalla()
		armaduraConCotaDeMalla = new Armadura(valorBase = 2, refuerzo = cotaDeMalla,  peso = 10)
		armaduraConHechizoPar = new Armadura(valorBase = 2, refuerzo = hechizoComercial, peso = 12)
		armaduraConHechizoImpar = new Armadura(valorBase = 2, refuerzo = hechizoLogo,  peso = 12)
		armaduraSinRefuerzo = new Armadura(valorBase = 2, refuerzo = sinRefuerzo,  peso = 12)
		merlin = new Jugador(valorBaseLucha = 2, hechizoPreferido = null, capacidadDeCarga = 10)
		ursula = new Jugador(valorBaseLucha = 2, hechizoPreferido = null, capacidadDeCarga = 200, artefactos = [ unaMascara, armaduraConCotaDeMalla ])
		mockHnos = new Comerciante(itemsEnVenta = [ mascaraOscura, mascaraClara, armaduraConHechizoPar ], situacionImpositiva = new Independiente(porcentajeDeComision = 0))
	}

	test "Si ronaldo no tiene artefactos, su habilidad de lucha es 1" {
		rolando.desequipateTodo()
		assert.equals(rolando.habilidadDeLucha(), 1)
	}

	test "La habilidad de ronaldo con todos los artefactos es de 13" {
		assert.equals(rolando.habilidadDeLucha(), 13)
	}

	test "Si el collar divino tiene 3 perlas, la habilidad de lucha de ronaldo es de 11" {
		collarDivino.perlas(3)
		assert.equals(rolando.habilidadDeLucha(), 11)
	}

	test "Si el valor base de ronaldo es 8, su habilidad de lucha es 20" {
		rolando.valorBaseLucha(8)
		assert.equals(rolando.habilidadDeLucha(), 20)
	}

	test "Luego de un eclipse, la unidad de lucha de una mascara oscura es 5" {
		mundo.ocurreUnEclipse()
		assert.equals(unaMascara.unidadDeLucha(rolando), 5)
	}

	test "Si se elimina la mascara oscura de los artefactos de ronaldo, su habilidad es 9" {
		rolando.desequipate(unaMascara)
		assert.equals(rolando.habilidadDeLucha(), 9)
	}

	test "Se agrega una mascara oscura(indice de oscuridad = 0) a rolando, su unidad de lucha es 4" {
		rolando.equipate(otraMascara)
		assert.equals(otraMascara.unidadDeLucha(rolando), 4)
	}

	test "Se agrega una mascara oscura(indice de oscuridad = 0,valor Minimo =2) a rolando, su unidad de lucha es 2" {
		otraMascara.minimoPoder(2)
		rolando.equipate(otraMascara)
		assert.equals(otraMascara.unidadDeLucha(rolando), 2)
	}

	test "El peso de la espada vieja es 6 kg" {
		assert.equals(espadaVieja.pesoTotal(), 6)
	}

	test "El peso de la espada nueva es 4 kg" {
		assert.equals(espadaNueva.pesoTotal(), 4)
	}

	test "El peso de la espada comun es 4.95 kg" {
		assert.equals(espadaComun.pesoTotal(), 4.95)
	}

	test "El peso del collar divino  es 2.5 kg" {
		assert.equals(collarDivino.pesoTotal(), 2.5)
	}

	test "El peso de la mascara oscura  es 3 kg" {
		unaMascara.minimoPoder(0)
		assert.equals(mascaraOscura.pesoTotal(), 3)
	}

	test "Ocurre un ecplipse y el peso de la mascara oscura es 5 kg" {
		mundo.ocurreUnEclipse()
		mascaraOscura.unidadDeLucha(merlin)
		assert.equals(mascaraOscura.pesoTotal(), 5)
	}

	test "El peso de la mascara clara es 2 kg" {
		assert.equals(mascaraClara.pesoTotal(), 2)
	}

	test "El peso de la armadura con cota de malla es 11 kg" {
		assert.equals(armaduraConCotaDeMalla.pesoTotal(), 11)
	}

	test "El peso de la armadura con hechizo par es de 14 kg" {
		assert.equals(armaduraConHechizoPar.pesoTotal(), 14)
	}

	test "El peso de la armadura con hechizo impar es de 13 kg" {
		assert.equals(armaduraConHechizoImpar.pesoTotal(), 13)
	}

	test "El peso de la armadura sin refuerzo es de 12 kg" {
		assert.equals(armaduraSinRefuerzo.pesoTotal(), 12)
	}

	test "Merlin le compra a mockHnos la mascaraOscura y la clara,su peso es 5 kg" {
		merlin.comprarUnArtefacto(mascaraOscura, mockHnos)
		merlin.comprarUnArtefacto(mascaraClara, mockHnos)
		assert.equals(merlin.cargaActual(), 5)
	}

	test "Merlín no puede comprar a Mock Hnos. la armadura con hechizo par." {
		const mensajeDeError = "este articulo es mucho para ti! aliviana tu carga!"
		const excepcionEsperada = new NoSePuedeComprarException(mensajeDeError)
		const bloqueQueDebeExplotar = { merlin.comprarUnArtefacto(armaduraConHechizoPar, mockHnos) }
		assert.throwsExceptionLike(excepcionEsperada, bloqueQueDebeExplotar)
	}

	test "Ursula se desprende de la armaduraConCotaDeMalla ,queda con 3kg de carga" {
		ursula.desequipate(armaduraConCotaDeMalla)
		assert.equals(ursula.cargaActual(), 3)
	}


}

